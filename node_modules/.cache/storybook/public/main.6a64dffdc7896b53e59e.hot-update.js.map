{"version":3,"file":"main.6a64dffdc7896b53e59e.hot-update.js","sources":["webpack:///./src/widgets/Menu/index.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import noop from \\\"lodash/noop\\\";\\nimport React, { useState } from \\\"react\\\";\\nimport { BrowserRouter, MemoryRouter } from \\\"react-router-dom\\\";\\nimport Box from \\\"../../components/Box/Box\\\";\\nimport Flex from \\\"../../components/Box/Flex\\\";\\nimport Button from \\\"../../components/Button/Button\\\";\\nimport IconButton from \\\"../../components/Button/IconButton\\\";\\nimport DropdownMenu from \\\"../../components/DropdownMenu/DropdownMenu\\\";\\nimport Heading from \\\"../../components/Heading/Heading\\\";\\nimport Input from \\\"../../components/Input/Input\\\";\\nimport { ChevronDownIcon, CogIcon, LanguageCurrencyIcon } from \\\"../../components/Svg\\\";\\nimport Text from \\\"../../components/Text/Text\\\";\\nimport { Modal, ModalProps, useModal } from \\\"../Modal\\\";\\nimport { LabelText, StyledUserMenu } from \\\"./components/UserMenu\\\";\\nimport MenuIcon from \\\"./components/UserMenu/MenuIcon\\\";\\nimport { Variant, variants } from \\\"./components/UserMenu/types\\\";\\nimport { links, userMenulinks } from \\\"./config\\\";\\nimport { footerLinks } from \\\"../../components/Footer/config\\\";\\nimport Menu from \\\"./Menu\\\";\\nimport { Language, NavProps } from \\\"./types\\\";\\n\\nexport default {\\n  title: \\\"Widgets/Menu\\\",\\n  component: Menu,\\n  argTypes: {\\n    activeItem: {\\n      options: [\\\"Trade\\\", \\\"Earn\\\", \\\"Win\\\"],\\n      control: { type: \\\"select\\\" },\\n    },\\n  },\\n};\\n\\nconst langs: Language[] = [...Array(20)].map((_, i) => ({\\n  code: `en${i}`,\\n  language: `English${i}`,\\n  locale: `Locale${i}`,\\n}));\\n\\nconst UserMenuComponent: React.FC<{ variant?: Variant; text?: string; account?: string }> = ({\\n  variant = variants.DEFAULT,\\n  text,\\n  account = \\\"0x8b017905DC96B38f817473dc885F84D4C76bC113\\\",\\n}) => {\\n  const accountEllipsis = account ? `${account.substring(0, 2)}...${account.substring(account.length - 4)}` : null;\\n  return (\\n    <DropdownMenu items={userMenulinks} py=\\\"12px\\\">\\n      <StyledUserMenu>\\n        <MenuIcon avatarSrc=\\\"\\\" variant={variant} />\\n        <LabelText title={text || account}>{text || accountEllipsis}</LabelText>\\n        <ChevronDownIcon color=\\\"text\\\" width=\\\"24px\\\" />\\n      </StyledUserMenu>\\n    </DropdownMenu>\\n  );\\n};\\n\\nconst GlobalMenuModal: React.FC<ModalProps> = ({ title, onDismiss, ...props }) => (\\n  <Modal title={title} onDismiss={onDismiss} {...props}>\\n    <Heading>{title}</Heading>\\n    <Button>This button Does nothing</Button>\\n  </Modal>\\n);\\n\\nconst GlobalMenuComponent: React.FC = () => {\\n  const [onPresent1] = useModal(<GlobalMenuModal title=\\\"Display Settings Modal\\\" />);\\n  const [onPresent2] = useModal(<GlobalMenuModal title=\\\"Global Settings Modal\\\" />);\\n\\n  return (\\n    <Flex>\\n      <IconButton onClick={onPresent2} variant=\\\"text\\\" scale=\\\"sm\\\" mr=\\\"8px\\\">\\n        <CogIcon height={22} width={22} color=\\\"textSubtle\\\" />\\n      </IconButton>\\n    </Flex>\\n  );\\n};\\n\\nconst defaultProps = {\\n  account: \\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\",\\n  login: noop,\\n  logout: noop,\\n  isDark: true,\\n  toggleTheme: noop,\\n  langs,\\n  setLang: noop,\\n  currentLang: \\\"EN\\\",\\n  cakePriceUsd: 0.023158668932877668,\\n  links,\\n  subLinks: links[0].items,\\n  footerLinks,\\n  profile: null,\\n  userMenu: <UserMenuComponent account=\\\"0xbdda50183d817c3289f895a4472eb475967dc980\\\" />,\\n  globalMenu: <GlobalMenuComponent />,\\n  activeItem: \\\"/swap\\\",\\n  activeSubItem: \\\"https://exchange.pancakeswap.finance\\\",\\n  buyCakeLabel: \\\"Buy CAKE\\\",\\n};\\n\\nconst ConnectedTemplate: React.FC<NavProps> = (args) => {\\n  return (\\n    <BrowserRouter>\\n      <Menu {...args}>\\n        <div>\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\n            Page body\\n          </Heading>\\n          <Text as=\\\"p\\\">\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\\n            exercitation ullamco laboris nisi ut\\n          </Text>\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n};\\nexport const Connected = ConnectedTemplate.bind({});\\nConnected.args = defaultProps;\\n\\nexport const NotConnected: React.FC = () => {\\n  return (\\n    <BrowserRouter>\\n      <Menu\\n        isDark={true}\\n        toggleTheme={noop}\\n        langs={langs}\\n        setLang={noop}\\n        currentLang=\\\"EN\\\"\\n        links={links}\\n        subLinks={subLinks}\\n        footerLinks={footerLinks}\\n      >\\n        <div>\\n          <h1>Page body</h1>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\\n          mollit anim id est laborum.\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n};\\n\\nexport const WithoutConnectButton: React.FC = () => {\\n  return (\\n    <BrowserRouter>\\n      <Menu\\n        isDark={true}\\n        toggleTheme={noop}\\n        langs={langs}\\n        setLang={noop}\\n        currentLang=\\\"EN\\\"\\n        links={links}\\n        footerLinks={footerLinks}\\n        subLinks={subLinks}\\n      >\\n        <div>\\n          <h1>No connect button on top</h1>\\n          This variant is needed for info site\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n};\\n\\nexport const WithSubmenuSelected: React.FC = () => {\\n  return (\\n    <MemoryRouter initialEntries={[\\\"/teams\\\"]}>\\n      <Menu\\n        isDark={false}\\n        toggleTheme={noop}\\n        langs={langs}\\n        setLang={noop}\\n        currentLang=\\\"EN\\\"\\n        cakePriceUsd={0.23158668932877668}\\n        links={links}\\n        subLinks={subLinks}\\n        footerLinks={footerLinks}\\n      >\\n        <div>\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\n            Submenu leaderboard selected\\n          </Heading>\\n        </div>\\n      </Menu>\\n    </MemoryRouter>\\n  );\\n};\\n\\nexport const UserMenuWithVariants: React.FC = () => {\\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\\n  const [text, setText] = useState(undefined);\\n\\n  const handleChange = (evt) => {\\n    const { value } = evt.target;\\n    setText(value);\\n  };\\n\\n  return (\\n    <BrowserRouter>\\n      <Box p=\\\"40px\\\">\\n        <Flex justifyContent=\\\"space-between\\\">\\n          <Box>\\n            <Heading size=\\\"sm\\\" mb=\\\"16px\\\">\\n              Variants\\n            </Heading>\\n            <Flex mb=\\\"16px\\\">\\n              {Object.keys(variants).map((variantKey) => (\\n                <Button\\n                  scale=\\\"sm\\\"\\n                  variant={variant === variants[variantKey] ? \\\"primary\\\" : \\\"text\\\"}\\n                  ml=\\\"8px\\\"\\n                  onClick={() => setVariant(variants[variantKey])}\\n                >\\n                  {variants[variantKey].toUpperCase()}\\n                </Button>\\n              ))}\\n            </Flex>\\n            <Box py=\\\"8px\\\">\\n              <Input value={text} onChange={handleChange} placeholder=\\\"Custom Text...\\\" />\\n            </Box>\\n          </Box>\\n          <UserMenuComponent variant={variant} text={text} />\\n        </Flex>\\n      </Box>\\n    </BrowserRouter>\\n  );\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Connected\":{\"startLoc\":{\"col\":46,\"line\":97},\"endLoc\":{\"col\":1,\"line\":122},\"startBody\":{\"col\":46,\"line\":97},\"endBody\":{\"col\":1,\"line\":122}},\"NotConnected\":{\"startLoc\":{\"col\":38,\"line\":126},\"endLoc\":{\"col\":1,\"line\":154},\"startBody\":{\"col\":38,\"line\":126},\"endBody\":{\"col\":1,\"line\":154}},\"WithoutConnectButton\":{\"startLoc\":{\"col\":46,\"line\":156},\"endLoc\":{\"col\":1,\"line\":176},\"startBody\":{\"col\":46,\"line\":156},\"endBody\":{\"col\":1,\"line\":176}},\"WithSubmenuSelected\":{\"startLoc\":{\"col\":45,\"line\":178},\"endLoc\":{\"col\":1,\"line\":200},\"startBody\":{\"col\":45,\"line\":178},\"endBody\":{\"col\":1,\"line\":200}},\"UserMenuWithVariants\":{\"startLoc\":{\"col\":46,\"line\":202},\"endLoc\":{\"col\":1,\"line\":240},\"startBody\":{\"col\":46,\"line\":202},\"endBody\":{\"col\":1,\"line\":240}}};\n    \nimport noop from \"lodash/noop\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter, MemoryRouter } from \"react-router-dom\";\nimport Box from \"../../components/Box/Box\";\nimport Flex from \"../../components/Box/Flex\";\nimport Button from \"../../components/Button/Button\";\nimport IconButton from \"../../components/Button/IconButton\";\nimport DropdownMenu from \"../../components/DropdownMenu/DropdownMenu\";\nimport Heading from \"../../components/Heading/Heading\";\nimport Input from \"../../components/Input/Input\";\nimport { ChevronDownIcon, CogIcon, LanguageCurrencyIcon } from \"../../components/Svg\";\nimport Text from \"../../components/Text/Text\";\nimport { Modal, ModalProps, useModal } from \"../Modal\";\nimport { LabelText, StyledUserMenu } from \"./components/UserMenu\";\nimport MenuIcon from \"./components/UserMenu/MenuIcon\";\nimport { Variant, variants } from \"./components/UserMenu/types\";\nimport { links, userMenulinks } from \"./config\";\nimport { footerLinks } from \"../../components/Footer/config\";\nimport Menu from \"./Menu\";\nimport { Language, NavProps } from \"./types\";\n\nexport default {\n  title: \"Widgets/Menu\",\n  component: Menu,\n  argTypes: {\n    activeItem: {\n      options: [\"Trade\", \"Earn\", \"Win\"],\n      control: { type: \"select\" },\n    },\n  },\n};\n\nconst langs: Language[] = [...Array(20)].map((_, i) => ({\n  code: `en${i}`,\n  language: `English${i}`,\n  locale: `Locale${i}`,\n}));\n\nconst UserMenuComponent: React.FC<{ variant?: Variant; text?: string; account?: string }> = ({\n  variant = variants.DEFAULT,\n  text,\n  account = \"0x8b017905DC96B38f817473dc885F84D4C76bC113\",\n}) => {\n  const accountEllipsis = account ? `${account.substring(0, 2)}...${account.substring(account.length - 4)}` : null;\n  return (\n    <DropdownMenu items={userMenulinks} py=\"12px\">\n      <StyledUserMenu>\n        <MenuIcon avatarSrc=\"\" variant={variant} />\n        <LabelText title={text || account}>{text || accountEllipsis}</LabelText>\n        <ChevronDownIcon color=\"text\" width=\"24px\" />\n      </StyledUserMenu>\n    </DropdownMenu>\n  );\n};\n\nconst GlobalMenuModal: React.FC<ModalProps> = ({ title, onDismiss, ...props }) => (\n  <Modal title={title} onDismiss={onDismiss} {...props}>\n    <Heading>{title}</Heading>\n    <Button>This button Does nothing</Button>\n  </Modal>\n);\n\nconst GlobalMenuComponent: React.FC = () => {\n  const [onPresent1] = useModal(<GlobalMenuModal title=\"Display Settings Modal\" />);\n  const [onPresent2] = useModal(<GlobalMenuModal title=\"Global Settings Modal\" />);\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresent2} variant=\"text\" scale=\"sm\" mr=\"8px\">\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  );\n};\n\nconst defaultProps = {\n  account: \"0xbdda50183d817c3289f895a4472eb475967dc980\",\n  login: noop,\n  logout: noop,\n  isDark: true,\n  toggleTheme: noop,\n  langs,\n  setLang: noop,\n  currentLang: \"EN\",\n  cakePriceUsd: 0.023158668932877668,\n  links,\n  subLinks: links[0].items,\n  footerLinks,\n  profile: null,\n  userMenu: <UserMenuComponent account=\"0xbdda50183d817c3289f895a4472eb475967dc980\" />,\n  globalMenu: <GlobalMenuComponent />,\n  activeItem: \"/swap\",\n  activeSubItem: \"https://exchange.pancakeswap.finance\",\n  buyCakeLabel: \"Buy CAKE\",\n};\n\nconst ConnectedTemplate: React.FC<NavProps> = (args) => {\n  return (\n    <BrowserRouter>\n      <Menu {...args}>\n        <div>\n          <Heading as=\"h1\" mb=\"8px\">\n            Page body\n          </Heading>\n          <Text as=\"p\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n            exercitation ullamco laboris nisi ut\n          </Text>\n        </div>\n      </Menu>\n    </BrowserRouter>\n  );\n};\nexport const Connected = ConnectedTemplate.bind({});;\nConnected.args = defaultProps;\n\nexport const NotConnected: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Menu\n        isDark={true}\n        toggleTheme={noop}\n        langs={langs}\n        setLang={noop}\n        currentLang=\"EN\"\n        links={links}\n        subLinks={subLinks}\n        footerLinks={footerLinks}\n      >\n        <div>\n          <h1>Page body</h1>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n          mollit anim id est laborum.\n        </div>\n      </Menu>\n    </BrowserRouter>\n  );\n};;\n\nexport const WithoutConnectButton: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Menu\n        isDark={true}\n        toggleTheme={noop}\n        langs={langs}\n        setLang={noop}\n        currentLang=\"EN\"\n        links={links}\n        footerLinks={footerLinks}\n        subLinks={subLinks}\n      >\n        <div>\n          <h1>No connect button on top</h1>\n          This variant is needed for info site\n        </div>\n      </Menu>\n    </BrowserRouter>\n  );\n};;\n\nexport const WithSubmenuSelected: React.FC = () => {\n  return (\n    <MemoryRouter initialEntries={[\"/teams\"]}>\n      <Menu\n        isDark={false}\n        toggleTheme={noop}\n        langs={langs}\n        setLang={noop}\n        currentLang=\"EN\"\n        cakePriceUsd={0.23158668932877668}\n        links={links}\n        subLinks={subLinks}\n        footerLinks={footerLinks}\n      >\n        <div>\n          <Heading as=\"h1\" mb=\"8px\">\n            Submenu leaderboard selected\n          </Heading>\n        </div>\n      </Menu>\n    </MemoryRouter>\n  );\n};;\n\nexport const UserMenuWithVariants: React.FC = () => {\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\n  const [text, setText] = useState(undefined);\n\n  const handleChange = (evt) => {\n    const { value } = evt.target;\n    setText(value);\n  };\n\n  return (\n    <BrowserRouter>\n      <Box p=\"40px\">\n        <Flex justifyContent=\"space-between\">\n          <Box>\n            <Heading size=\"sm\" mb=\"16px\">\n              Variants\n            </Heading>\n            <Flex mb=\"16px\">\n              {Object.keys(variants).map((variantKey) => (\n                <Button\n                  scale=\"sm\"\n                  variant={variant === variants[variantKey] ? \"primary\" : \"text\"}\n                  ml=\"8px\"\n                  onClick={() => setVariant(variants[variantKey])}\n                >\n                  {variants[variantKey].toUpperCase()}\n                </Button>\n              ))}\n            </Flex>\n            <Box py=\"8px\">\n              <Input value={text} onChange={handleChange} placeholder=\"Custom Text...\" />\n            </Box>\n          </Box>\n          <UserMenuComponent variant={variant} text={text} />\n        </Flex>\n      </Box>\n    </BrowserRouter>\n  );\n};\n\n\n\nConnected.parameters = { storySource: { source: \"(args) => {\\n  return (\\n    <BrowserRouter>\\n      <Menu {...args}>\\n        <div>\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\n            Page body\\n          </Heading>\\n          <Text as=\\\"p\\\">\\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\\n            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\\n            ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\\n            nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit\\n            anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\\n            incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\\n            laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit\\n            esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa\\n            qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit,\\n            sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\\n            exercitation ullamco laboris nisi ut\\n          </Text>\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n}\" }, ...Connected.parameters };\nNotConnected.parameters = { storySource: { source: \"() => {\\n  return (\\n    <BrowserRouter>\\n      <Menu\\n        isDark={true}\\n        toggleTheme={noop}\\n        langs={langs}\\n        setLang={noop}\\n        currentLang=\\\"EN\\\"\\n        links={links}\\n        subLinks={subLinks}\\n        footerLinks={footerLinks}\\n      >\\n        <div>\\n          <h1>Page body</h1>\\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n          magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n          consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\\n          est laborum. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\\n          labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\\n          aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore\\n          eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\\n          mollit anim id est laborum.\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n}\" }, ...NotConnected.parameters };\nWithoutConnectButton.parameters = { storySource: { source: \"() => {\\n  return (\\n    <BrowserRouter>\\n      <Menu\\n        isDark={true}\\n        toggleTheme={noop}\\n        langs={langs}\\n        setLang={noop}\\n        currentLang=\\\"EN\\\"\\n        links={links}\\n        footerLinks={footerLinks}\\n        subLinks={subLinks}\\n      >\\n        <div>\\n          <h1>No connect button on top</h1>\\n          This variant is needed for info site\\n        </div>\\n      </Menu>\\n    </BrowserRouter>\\n  );\\n}\" }, ...WithoutConnectButton.parameters };\nWithSubmenuSelected.parameters = { storySource: { source: \"() => {\\n  return (\\n    <MemoryRouter initialEntries={[\\\"/teams\\\"]}>\\n      <Menu\\n        isDark={false}\\n        toggleTheme={noop}\\n        langs={langs}\\n        setLang={noop}\\n        currentLang=\\\"EN\\\"\\n        cakePriceUsd={0.23158668932877668}\\n        links={links}\\n        subLinks={subLinks}\\n        footerLinks={footerLinks}\\n      >\\n        <div>\\n          <Heading as=\\\"h1\\\" mb=\\\"8px\\\">\\n            Submenu leaderboard selected\\n          </Heading>\\n        </div>\\n      </Menu>\\n    </MemoryRouter>\\n  );\\n}\" }, ...WithSubmenuSelected.parameters };\nUserMenuWithVariants.parameters = { storySource: { source: \"() => {\\n  const [variant, setVariant] = useState<Variant>(variants.DEFAULT);\\n  const [text, setText] = useState(undefined);\\n\\n  const handleChange = (evt) => {\\n    const { value } = evt.target;\\n    setText(value);\\n  };\\n\\n  return (\\n    <BrowserRouter>\\n      <Box p=\\\"40px\\\">\\n        <Flex justifyContent=\\\"space-between\\\">\\n          <Box>\\n            <Heading size=\\\"sm\\\" mb=\\\"16px\\\">\\n              Variants\\n            </Heading>\\n            <Flex mb=\\\"16px\\\">\\n              {Object.keys(variants).map((variantKey) => (\\n                <Button\\n                  scale=\\\"sm\\\"\\n                  variant={variant === variants[variantKey] ? \\\"primary\\\" : \\\"text\\\"}\\n                  ml=\\\"8px\\\"\\n                  onClick={() => setVariant(variants[variantKey])}\\n                >\\n                  {variants[variantKey].toUpperCase()}\\n                </Button>\\n              ))}\\n            </Flex>\\n            <Box py=\\\"8px\\\">\\n              <Input value={text} onChange={handleChange} placeholder=\\\"Custom Text...\\\" />\\n            </Box>\\n          </Box>\\n          <UserMenuComponent variant={variant} text={text} />\\n        </Flex>\\n      </Box>\\n    </BrowserRouter>\\n  );\\n}\" }, ...UserMenuWithVariants.parameters };"],"mappingshBA;AACA;AAgBA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAFA;AADA;AACA;AADA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AADA;AAMA;AACA;AAZA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAlBA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAJA;AADA;AADA;AAuBA;AACA;AA1BA;AA0BA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AADA;AAVA;AADA;AA0BA;AA5BA;AA4BA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AAAA;AADA;AAVA;AADA;AAkBA;AApBA;AAoBA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AAAA;AAAA;AAAA;AADA;AAXA;AADA;AAoBA;AAtBA;AAsBA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AADA;AADA;AAYA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAhBA;AAoBA;AAAA;AAAA;AArBA;AADA;AADA;AA4BA;AAtCA;AA0CA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}