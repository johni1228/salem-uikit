{"version":3,"file":"main.4f96e45f5bde5ae221ae.hot-update.js","sources":["webpack:///./src/widgets/Menu/Menu.tsx"],"sourcesContent":["import throttle from \"lodash/throttle\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport BottomNav from \"../../components/BottomNav\";\nimport { Box } from \"../../components/Box\";\nimport Flex from \"../../components/Box/Flex\";\nimport Footer from \"../../components/Footer\";\nimport MenuItems from \"../../components/MenuItems/MenuItems\";\nimport { SubMenuItems } from \"../../components/SubMenuItems\";\nimport { useMatchBreakpoints } from \"../../hooks\";\nimport CakePrice from \"../../components/CakePrice/CakePrice\";\nimport Logo from \"./components/Logo\";\nimport { MENU_HEIGHT, MOBILE_MENU_HEIGHT } from \"./config\";\nimport { NavProps } from \"./types\";\nimport LangSelector from \"../../components/LangSelector/LangSelector\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nconst StyledNav = styled.nav<{ showMenu: boolean }>`\n  position: fixed;\n  top: ${({ showMenu }) => (showMenu ? 0 : `-${MENU_HEIGHT}px`)};\n  left: 0;\n  transition: top 0.2s;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: ${MENU_HEIGHT}px;\n  background-color: ${({ theme }) => theme.nav.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  z-index: 20;\n  transform: translate3d(0, 0, 0);\n\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n\nconst BodyWrapper = styled(Box)`\n  position: relative;\n  display: flex;\n`;\n\nconst Inner = styled.div<{ isPushed: boolean; showMenu: boolean }>`\n  flex-grow: 1;\n  transition: margin-top 0.2s, margin-left 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  transform: translate3d(0, 0, 0);\n  max-width: 100%;\n`;\n\nconst Menu: React.FC<NavProps> = ({\n  userMenu,\n  globalMenu,\n  isDark,\n  toggleTheme,\n  currentLang,\n  setLang,\n  cakePriceUsd,\n  links,\n  subLinks,\n  footerLinks,\n  activeItem,\n  activeSubItem,\n  langs,\n  buyCakeLabel,\n  children,\n}) => {\n  const { isMobile } = useMatchBreakpoints();\n  const [showMenu, setShowMenu] = useState(true);\n  const refPrevOffset = useRef(window.pageYOffset);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentOffset = window.pageYOffset;\n      const isBottomOfPage = window.document.body.clientHeight === currentOffset + window.innerHeight;\n      const isTopOfPage = currentOffset === 0;\n      // Always show the menu when user reach the top\n      if (isTopOfPage) {\n        setShowMenu(true);\n      }\n      // Avoid triggering anything at the bottom because of layout shift\n      else if (!isBottomOfPage) {\n        if (currentOffset < refPrevOffset.current || currentOffset <= MENU_HEIGHT) {\n          // Has scroll up\n          setShowMenu(true);\n        } else {\n          // Has scroll down\n          setShowMenu(false);\n        }\n      }\n      refPrevOffset.current = currentOffset;\n    };\n    const throttledHandleScroll = throttle(handleScroll, 200);\n\n    window.addEventListener(\"scroll\", throttledHandleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", throttledHandleScroll);\n    };\n  }, []);\n\n  // Find the home link if provided\n  const homeLink = links.find((link) => link.label === \"Home\");\n\n  const subLinksWithoutMobile = subLinks?.filter((subLink) => !subLink.isMobileOnly);\n  const subLinksMobileOnly = subLinks?.filter((subLink) => subLink.isMobileOnly);\n\n  return (\n    <Wrapper>\n      <StyledNav showMenu={showMenu}>\n        <Flex>\n          <Logo isDark={isDark} href={homeLink?.href ?? \"/\"} />\n          {!isMobile && <MenuItems items={links} activeItem={activeItem} activeSubItem={activeSubItem} ml=\"24px\" />}\n        </Flex>\n        <Flex alignItems=\"center\">\n          {!isMobile && (\n            <Box mr=\"12px\">\n              <CakePrice cakePriceUsd={cakePriceUsd} />\n            </Box>\n          )}\n          <Box mt=\"4px\">\n            <LangSelector\n              currentLang={currentLang}\n              langs={langs}\n              setLang={setLang}\n              buttonScale=\"xs\"\n              color=\"textSubtle\"\n              hideLanguage\n            />\n          </Box>\n          {globalMenu} {userMenu}\n        </Flex>\n      </StyledNav>\n      {subLinks && (\n        <Flex justifyContent=\"space-around\">\n          <SubMenuItems items={subLinksWithoutMobile} mt={`${MENU_HEIGHT + 1}px`} activeItem={activeSubItem} />\n\n          {subLinksMobileOnly?.length > 0 && (\n            <SubMenuItems\n              items={subLinksMobileOnly}\n              mt={`${MENU_HEIGHT + 1}px`}\n              activeItem={activeSubItem}\n              isMobileOnly\n            />\n          )}\n        </Flex>\n      )}\n      <BodyWrapper mt={!subLinks ? `${MENU_HEIGHT + 1}px` : \"0\"}>\n        <Inner isPushed={false} showMenu={showMenu}>\n          {children}\n          <Footer\n            items={footerLinks}\n            isDark={isDark}\n            toggleTheme={toggleTheme}\n            langs={langs}\n            setLang={setLang}\n            currentLang={currentLang}\n            cakePriceUsd={cakePriceUsd}\n            buyCakeLabel={buyCakeLabel}\n            mb={[`${MOBILE_MENU_HEIGHT}px`, null, \"0px\"]}\n          />\n        </Inner>\n      </BodyWrapper>\n      {isMobile && <BottomNav items={links} activeItem={activeItem} activeSubItem={activeSubItem} />}\n    </Wrapper>\n  );\n};\n\nexport default Menu;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAMA;AAgBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AADA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AANA;AALA;AAyBA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAJA;AAaA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AADA;AAgBA;AAAA;AAAA;AAAA;AAvDA;AA0DA;AACA;AApHA;AAqHA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}